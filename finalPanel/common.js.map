{"version":3,"sources":["./src/app/modules/auth/services/auth.service.ts","./src/app/modules/main/pages/company/services/company.service.ts","./src/app/modules/main/services/notification.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { IToken, IUserLogin, IUserRegister, Login, User } from 'src/app/shared/interfaces/i-auth';\nimport { environment } from 'src/environments/environment';\n\nimport { DataService } from './data.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient,private dataSvc: DataService, private router: Router) { }\n\n  onLogIn(user: IUserLogin): Observable<Login>{\n    return this.http.post<Login>(`${environment.API_URL}/login`,user)\n    .pipe(\n      tap((data: Login) => {\n        localStorage.setItem(environment.NAME_TOKEN, data.data.accessToken.token);\n        localStorage.setItem(environment.NAME_REFRESH_TOKEN, data.data.accessToken.refreshToken);\n        this.dataSvc.onSaveCookie(environment.NAME_TOKEN, data.data.accessToken.token);\n        this.dataSvc.onSaveCookie(environment.NAME_REFRESH_TOKEN, data.data.accessToken.token);\n      })\n    )\n  }\n\n  onRegister(user: IUserRegister): Observable<User>{\n    return this.http.post<User>(`${environment.API_URL}/sign-up`,user)\n    .pipe(\n      tap((data: User) => {\n        console.log(\"data\", data)\n      })\n    )\n  }\n\n  onLogOut(): void{\n    this.dataSvc.onRemoveAllCookies();\n    this.router.navigate(['/auth/login']);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Memes } from 'src/app/shared/interfaces/i-article';\nimport { apiToken } from 'src/app/shared/interfaces/i-auth';\nimport { CompanyRes, ICompany, MemeRes } from 'src/app/shared/interfaces/i-company';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompanyService {\n  constructor(private http: HttpClient) { }\n\n  showCompanies(): Observable<Memes[]>{\n    return this.http.get<Memes[]>(`${environment.API_URL}/memes/`);\n  }\n\n  createCompanie(data: Memes): Observable<MemeRes> {\n    return this.http.post<MemeRes>(`${environment.API_URL}/memes/`,data);\n  }\n\n  updateCompany(data: Memes): Observable<MemeRes> {\n    return this.http.patch<MemeRes>(`${environment.API_URL}/memes/${data.id}`,data)\n  }\n  \n  deleteMeme(id: number, token: apiToken): Observable<MemeRes> {\n    //return this.http.delete<MemeRes>(`${environment.API_URL}/memes/${data.id}`, token, {observe: 'response'});\n    return this.http.request<MemeRes>('delete', `${environment.API_URL}/memes/${id}`, { body: token })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  \n  constructor(private snack: MatSnackBar, private dialog: MatDialog) { }\n\n  openSnackBar(msg: string, time: number): Observable<void>{\n    return this.snack.open(msg, undefined, { duration: time}).afterOpened();\n  }\n}\n"],"sourceRoot":"webpack:///"}