{"version":3,"sources":["./src/app/modules/auth/pages/confirmcode/confirmcode.module.ts","./src/app/modules/auth/pages/confirmcode/confirmcode-routing.module.ts","./src/app/modules/auth/pages/confirmcode/confirmcode.component.ts","./src/app/modules/auth/pages/confirmcode/confirmcode.component.html"],"names":[],"mappings":"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","file":"pages-confirmcode-confirmcode-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ConfirmCodeRoutingModule } from './confirmcode-routing.module';\r\nimport { ConfirmCodeComponent } from './confirmcode.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from 'src/app/shared/modules/material.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ConfirmCodeComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ConfirmCodeRoutingModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class ConfirmCodeModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ConfirmCodeComponent } from './confirmcode.component';\r\n\r\nconst routes: Routes = [{path: '', component: ConfirmCodeComponent}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ConfirmCodeRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NotificationService } from 'src/app/modules/main/services/notification.service';\nimport { IUserLogin } from 'src/app/shared/interfaces/i-auth';\nimport { AuthService } from '../../services/auth.service';\nimport { DataService } from '../../services/data.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './confirmcode.component.html',\n  styleUrls: ['./confirmcode.component.scss']\n})\nexport class ConfirmCodeComponent implements OnInit {\n// test: string\nemail!:string\npassword!:string\nuserData!: IUserLogin\nuser!: IUserLogin\n\nlogInForm: FormGroup;\nhide = true;\nconstructor(private authService: AuthService, \n            private router: Router, \n            private formB: FormBuilder,\n            private notiSvc: NotificationService,\n            private dataSvc: DataService) {\n  this.buildForm();\n  if (this.router.getCurrentNavigation().extras.state){\n    this.password= this.router.getCurrentNavigation().extras.state['password']\n    console.log(this.router.getCurrentNavigation().extras.state['password'])\n  }\n}\n\n  ngOnInit(): void {\n    var data = localStorage.getItem('user');\n    this.user = JSON.parse(data);\n    console.log(this.user);\n  }\n\n  ngOnDestroy(): void {\n    localStorage.removeItem('user');\n    this.dataSvc.onRemoveCookie('user');\n  }\n\n  logIn(): void{\n      if(this.logInForm.invalid){\n      this.notiSvc.openSnackBar(\"Introducir el codigo por favor\", 2000)\n      return ;\n    }\n    this.setAuthData()\n    this.authService.onVerificate(this.userData).subscribe( (data) => {\n        //console.log(\"pog\")\n        if (data.data.user.role_id == 2 && data.data.accessToken != null){\n          this.router.navigate(['panel/empresas']);\n        } else if (data.data.user.role_id=1) {\n          console.log(\"User\", data.data.user)\n          localStorage.setItem(environment.USER2, JSON.stringify(data.data.user));\n          var data2 = localStorage.getItem('user2');\n          console.log(data2);\n          this.router.navigate(['auth/wait']);\n        }\n      }, error => {\n        console.log(error);\n        this.notiSvc.openSnackBar(\"Credenciales Incorrectas\", 2000)\n      });\n  }\n\n  register(): void{\n      this.router.navigate(['auth/login']);\n  }\n\n  buildForm(): void {\n    this.logInForm = this.formB.group({\n      login_token: ['', Validators.required]\n    });\n  }\n\n  setAuthData(): void{\n    this.userData = {\n      email: this.user.email,\n      password: this.password,\n      login_token: this.logInForm.get('login_token')?.value\n    };\n  }\n}\n","<div class=\"footer\">\n\n<div class=\"container mat-elevation-z8\">\n  <!--div class=\"container\"-->\n    <form [formGroup]=\"logInForm\"   autocomplete=\"off\">\n      <div class=\"form-container\">\n        <div class=\"imagen\">\n          <!--img src=\"../../../../../assets/images/vanko_logo.png\" alt=\"\" style=\"height: 100px; width: 100px; padding-top: 20px;\" -->\n        </div>\n        <div class=\"mat-title\" style=\"text-align: center; \">Introduce el codigo de verificacion</div>\n        <div class=\"imagen\">\n          <mat-form-field appearance=\"outline\" color=\"accent\">\n            <mat-label>Codigo</mat-label>\n            <input matInput placeholder=\"\" formControlName=\"login_token\" required>\n            <mat-error *ngIf=\"logInForm.controls['login_token'].invalid\">Este campo es obligatorio</mat-error>\n          </mat-form-field>\n          <p></p>\n          <p></p>\n          <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"logIn()\">Verificar Codigo</button>\n          <div class=\"paddingTop\">\n          </div>\n        </div>\n      </div>\n    </form>\n  <!--/div-->\n</div>\n</div>"],"sourceRoot":"webpack:///"}